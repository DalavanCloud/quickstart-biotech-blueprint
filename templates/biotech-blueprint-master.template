---
AWSTemplateFormatVersion: 2010-09-09
Description: Biotech Blueprint is an AWS Quick Start that helps Biotech companies deploy core AWS Infrastructure as well as CloudFormation templates for common ISV solutions. (qs-1of009lua)
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: DNS information
        Parameters:
          - pInternalDnsSecondLevelDomain
          - pInternalDnsTLDDomain
      - Label:
          default: Networking information
        Parameters:
          - pAvailabilityZones
          - pPreclinicalVPCCidrAandBBlock
          - pManagementVPCCidrAandBBlock
      - Label:
          default: Misc Options
        Parameters:
          - pNotifyEmail
          - pEC2KeyPair
          - pEC2KeyPair
          - pSupportConfig
          - pDBMultiAZ
          - pLoadBalancerType
      - Label:
          default: OpenVPN Parameters
        Parameters:
          - pOpenVPNASAccessCidr
          - pOpenVPNASAdminUsername
          - pOpenVPNASAdminPassword
      - Label:
          default: Benchling Parameters
        Parameters:
          - pLaunchBenchlingPlatform
          - pBenchlingInternalHostedZoneSecondLevelDomainName
          - pBenchlingPrivateLinkServiceName
      - Label:
          default: ChemAxon Compound Registry Parameters
        Parameters:
          - pLaunchChemAxonRegistry
          - pChemAxonRegistryDBUsername
          - pChemAxonRegistryDBPassword
      - Label:
          default: AWS Quick Start Configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
    ParameterLabels:
      pPreclinicalVPCCidrAandBBlock:
        default: A and B CIDR Blocks for Preclinical VPC
      pManagementVPCCidrAandBBlock:
        default: A and B CIDR Blocks for Management VPC
      pAvailabilityZones:
        default: Availability Zones
      pNotifyEmail:
        default: Notification Email Address
      pEC2KeyPair:
        default: Existing SSH Key for servers launched with this quickstart
      QSS3BucketName:
        default: Quick Start S3 Bucket Name
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
      pInternalDnsSecondLevelDomain:
        default: Preferred internal 2nd level domain name
      pInternalDnsTLDDomain:
        default: Preferred internal top level domain name
      pSupportConfig:
        default: Support AWS Config
      pLoadBalancerType:
        default: Load Balancer Type
      pOpenVPNASAccessCidr:
        default: OpenVPN Access CIDR
      pOpenVPNASAdminUsername:
        default: OpenVPN Username
      pOpenVPNASAdminPassword:
        default: OpenVPN Password
      pDBMultiAZ:
        default: MultiAZ RDS
      pLaunchBenchlingPlatform:
        default: "Launch Benchling?"
      pBenchlingInternalHostedZoneSecondLevelDomainName:
        default: Benchling subdomain
      pBenchlingPrivateLinkServiceName:
        default: Benchling PrivateLink service name.
      pLaunchChemAxonRegistry:
        default: "Launch ChemAxon Compound Registry?"
      pChemAxonRegistryDBUsername:
        default: ChemAxon Compound Registry DB Username
      pChemAxonRegistryDBPassword:
        default: ChemAxon Compound Registry DB Password

Parameters:
  pPreclinicalVPCCidrAandBBlock:
    Description: Preferred A and B CIDR block for Preclinical VPC. For example, this would be 10.82 in 10.82.0.0/20. Default is 10.82.
    Type: String
    Default: 10.82
  pManagementVPCCidrAandBBlock:  
    Description: Preferred A and B CIDR block for Management VPC. For example, this would be 10.81 in 10.81.0.0/20. Default is 10.81. 
    Type: String
    Default: 10.81
  pAvailabilityZones:
    Description: List of Availability Zones to use for the subnets in the VPC. Only
      two Availability Zones are used for this deployment, and the logical order of
      your selections is preserved.
    Type: List<AWS::EC2::AvailabilityZone::Name>
  pNotifyEmail:
    Description: Notification email address for security events (you will receive a confirmation email)
    Type: String
  pEC2KeyPair:
    Description: The SSH key pair in your account to use to login to the server launched by this quickstart.
    Type: AWS::EC2::KeyPair::KeyName
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. Quick Start bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and a forward slash (/) at the end of the prefix.
    Default: quickstart-biotech-blueprint/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  pInternalDnsSecondLevelDomain:
   Description: What second level domain should future biotech blueprint resources use? This would be the 'mycompany' portion of mycompany.com. Default is 'corp'
   Default: corp
   Type: String
  pInternalDnsTLDDomain:
   Description: What TLD domain should future biotech blueprint resources use? This would be the 'com' portion of mycompany.com.
   Default: com
   Type: String
  pSupportConfig:
    Description: Adds Config Rules to your deployment provided that the region supports Config Rules and you have previously deployed a Config Recorder. Default is No
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    Default: "No"
  pDBMultiAZ:
    Description: Do you want the database to be multi AZ?
    Type: String
    AllowedValues:
    - "true"
    - "false"
    Default: "false"
  pLoadBalancerType:
    Description: Internal by default. Internal load balancers are only accessible within your VPC. For example, users connected to the OpenVPN server can reach internal load balancers, but internet traffic cannot.
    Default: internal
    Type: String
    AllowedValues: 
      - internet-facing
      - internal
  pOpenVPNASAdminPassword:
    Description: OpenVPN Admin Password
    Type: String
    NoEcho: true
  pOpenVPNASAccessCidr:
    Description: OpenVPN CIDR. This should be your corporate office IP address. Visit whatsmyip.com to get your current IP address. Using '0.0.0.0/0' would make it open to the world.
    Type: String
  pOpenVPNASAdminUsername:
    Description: OpenVPN Admin Username. Default is openvpnadmin.
    Type: String
    Default: openvpnadmin
  pLaunchBenchlingPlatform:
    Description: Do you wish to launch Benchling as part of the Biotech Blueprint deployment?
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    Default: "No"
  pBenchlingInternalHostedZoneSecondLevelDomainName:
    Description: Benchling Route53 Hosted Zone 2nd level domain resources. This should be something like 'corp' to create the internal DNS entry for corp.benchling.com.
    Type: String
  pBenchlingPrivateLinkServiceName:
    Description: The private link endpoint service name. Leave this blank (default) unless Benchling has already provided you with one.
    Type: String
    Default: ""
  pLaunchChemAxonRegistry:
    Description: Do you wish to launch ChemAxon Compound Registry as part of the Biotech Blueprint deployment?
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    Default: "No"
  pChemAxonRegistryDBUsername: 
    Description: ChemAxon Compound Registry Database User/Owner. Default is cacrDBUser.
    Type: String
    Default: cacrDBUser
  pChemAxonRegistryDBPassword: 
    Description: ChemAxon Compound Registry Database User/Owner Password
    Type: String
    NoEcho: true

Mappings:
  RegionServiceSupport:
    us-east-1:
      ConfigRules: true
      Glacier: true
    us-west-2:
      ConfigRules: true
      Glacier: true
    eu-west-1:
      ConfigRules: true
      Glacier: true
  AWSAMIRegionMap:
    us-east-1:
      AMI: ami-c481fad3
      InstanceType: m4.large
    us-west-2:
      AMI: ami-b04e92d0
      InstanceType: m4.large
    eu-west-1:
      AMI: ami-d41d58a7
      InstanceType: m4.large
  OpenVpn:
    Defaults:
      InstanceType: t2.large
  ChemAxonRegistry:
    Defaults:
      AppServerInstanceType: t2.large
      DBInstanceType: db.t2.large
      DBAllocatedStorage: 50

Conditions:
  cLoadConfigRulesTemplate: !And [ !Equals [ !FindInMap [ RegionServiceSupport, !Ref "AWS::Region", ConfigRules ] , true ] , !Equals [ pSupportConfig , "Yes" ] ]
  cLaunchBenchlingPlatform: !Equals [ !Ref pLaunchBenchlingPlatform , "Yes" ]
  cLaunchChemAxonRegistry: !Equals [ !Ref pLaunchChemAxonRegistry , "Yes" ]

Resources:
  # Create standard IAM users
  rIam:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-compliance-common/templates/iam.template

  # Create logging config
  rLogging:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-compliance-common/templates/logging.template
      Parameters:
        pNotifyEmail: !Ref pNotifyEmail
        pSupportsGlacier: !FindInMap [ RegionServiceSupport, !Ref "AWS::Region", Glacier]

  # Create PreclinicalVPC
  rPreclinicalVpc:
    Type: AWS::CloudFormation::Stack
    DependsOn: 
    - rLogging
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template
      Parameters:
        AvailabilityZones: !Join [ "," , !Ref pAvailabilityZones ]
        CreateAdditionalPrivateSubnets: true
        CreatePrivateSubnets: true
        KeyPairName: !Ref pEC2KeyPair
        NATInstanceType: !FindInMap [ AWSAMIRegionMap, !Ref "AWS::Region", InstanceType ]
        NumberOfAZs: 2
        PrivateSubnet1ACIDR: !Sub ${pPreclinicalVPCCidrAandBBlock}.96.0/21
        PrivateSubnet1BCIDR: !Sub ${pPreclinicalVPCCidrAandBBlock}.119.0/21
        PrivateSubnet2ACIDR: !Sub ${pPreclinicalVPCCidrAandBBlock}.194.0/21
        PrivateSubnet2BCIDR: !Sub ${pPreclinicalVPCCidrAandBBlock}.212.0/21
        PublicSubnet1CIDR: !Sub ${pPreclinicalVPCCidrAandBBlock}.10.0/24
        PublicSubnet2CIDR: !Sub ${pPreclinicalVPCCidrAandBBlock}.20.0/24
        VPCCIDR: !Sub ${pPreclinicalVPCCidrAandBBlock}.0.0/16
                
  # Create management VPC
  rManagementVpc:
    Type: AWS::CloudFormation::Stack
    DependsOn: 
    - rLogging
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template
      Parameters:
        AvailabilityZones: !Join [ "," , !Ref pAvailabilityZones ]
        CreateAdditionalPrivateSubnets: false
        CreatePrivateSubnets: true
        KeyPairName: !Ref pEC2KeyPair
        NATInstanceType: !FindInMap [ AWSAMIRegionMap, !Ref "AWS::Region", InstanceType ]
        NumberOfAZs: 2
        PrivateSubnet1ACIDR: !Sub ${pManagementVPCCidrAandBBlock}.20.0/24
        PrivateSubnet2ACIDR: !Sub ${pManagementVPCCidrAandBBlock}.30.0/24
        PublicSubnet1CIDR: !Sub ${pManagementVPCCidrAandBBlock}.1.0/24
        PublicSubnet2CIDR: !Sub ${pManagementVPCCidrAandBBlock}.2.0/24
        VPCCIDR: !Sub ${pManagementVPCCidrAandBBlock}.0.0/16


  # Create additional VPC networking - peering and Internal DNS
  rVpcNetworking:
    Type: AWS::CloudFormation::Stack
    DependsOn:
    - rManagementVpc
    - rPreclinicalVpc
    - rLogging
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/vpc-networking.template
      Parameters:
        pPreclinicalVpcId: !GetAtt rPreclinicalVpc.Outputs.VPCID
        pPreclinicalVpcCidr: !GetAtt rPreclinicalVpc.Outputs.VPCCIDR
        pPreclinicalRouteTablePrivateA: !GetAtt rPreclinicalVpc.Outputs.PrivateSubnet1ARouteTable
        pPreclinicalRouteTablePrivateB: !GetAtt rPreclinicalVpc.Outputs.PrivateSubnet2ARouteTable
        pPreclinicalRouteTablePublic: !GetAtt rPreclinicalVpc.Outputs.PublicSubnetRouteTable
        pManagementVpcId: !GetAtt rManagementVpc.Outputs.VPCID
        pManagementVpcCidr: !GetAtt rManagementVpc.Outputs.VPCCIDR
        pManagementRouteTablePrivateA: !GetAtt rManagementVpc.Outputs.PrivateSubnet1ARouteTable
        pManagementRouteTablePrivateB: !GetAtt rManagementVpc.Outputs.PrivateSubnet2ARouteTable
        pManagementRouteTablePublic: !GetAtt rManagementVpc.Outputs.PublicSubnetRouteTable
        pInternal2ndLevelDomainName: !Ref pInternalDnsSecondLevelDomain
        pInternalDnsTopLevelDomain: !Ref pInternalDnsTLDDomain

  # Create Config Rules
  rConfigRules:
    Type: AWS::CloudFormation::Stack
    Condition: cLoadConfigRulesTemplate
    DependsOn:
    - rIam
    - rPreclinicalVpc
    - rManagementVpc
    - rLogging
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-compliance-common/templates/config-rules.template
      Parameters:
        pRequiredTagKey: ""

  # Add OpenVPN
  rOpenVpn:
    Type: AWS::CloudFormation::Stack
    DependsOn:
    - rPreclinicalVpc
    - rLogging
    - rVpcNetworking
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/openvpn.template
      Parameters:
        pKeyPairName: !Ref pEC2KeyPair
        pMobileUse: "No"
        pOpenVPNASAccessIP: !Ref pOpenVPNASAccessCidr
        pOpenVPNASInstanceType: !FindInMap [ OpenVpn, Defaults, InstanceType ]
        pOpenVPNASAdminUser: !Ref pOpenVPNASAdminUsername
        pOpenVPNASAdminPW: !Ref pOpenVPNASAdminPassword
        pPreclinicalDMZSubnetA: !GetAtt rPreclinicalVpc.Outputs.PublicSubnet1ID
        pPreclinicalVpcId: !GetAtt rPreclinicalVpc.Outputs.VPCID
        pDnsHostedZoneID: !GetAtt rVpcNetworking.Outputs.InternalHostedZoneIDParam
        pDnsHostedZoneApexDomain:  !GetAtt rVpcNetworking.Outputs.InternalHostedZoneApexDomainName

  # Partner Templates
  # Benchling
  rBenchling:
    Type: AWS::CloudFormation::Stack
    Condition: cLaunchBenchlingPlatform
    DependsOn:
    - rPreclinicalVpc
    - rVpcNetworking
    - rLogging
    - rOpenVpn
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-benchling-platform/templates/benchling-platform.template
      Parameters:
        pInternalHostedZoneSecondLevelDomainName: !Ref pBenchlingInternalHostedZoneSecondLevelDomainName
        pAppSubnetA: !GetAtt rPreclinicalVpc.Outputs.PrivateSubnet1AID
        pAppSubnetB: !GetAtt rPreclinicalVpc.Outputs.PrivateSubnet2AID
        pPrivateLinkServiceName: !Ref pBenchlingPrivateLinkServiceName
        pSecurityGroupForWebAccess: !GetAtt rOpenVpn.Outputs.rOpenVPNASAllowWebPortsSGParam
        pVpcId: !GetAtt rPreclinicalVpc.Outputs.VPCID

  # ChemAxon Compound Registry
  rChemAxonCompoundRegistry:
    Type: AWS::CloudFormation::Stack
    Condition: cLaunchChemAxonRegistry
    DependsOn:
    - rPreclinicalVpc
    - rOpenVpn
    - rVpcNetworking
    - rLogging
    Properties:
      TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-chemaxon-registry/templates/chemaxon-registry.template
      Parameters:
        pAppSubnetA: !GetAtt rPreclinicalVpc.Outputs.PrivateSubnet1AID
        pAppSubnetB: !GetAtt rPreclinicalVpc.Outputs.PrivateSubnet2AID
        pAppServerInstanceType: !FindInMap [ ChemAxonRegistry, Defaults, AppServerInstanceType ]
        pDBUsername: !Ref pChemAxonRegistryDBUsername
        pDBPassword: !Ref pChemAxonRegistryDBPassword
        pDBInstanceType: !FindInMap [ ChemAxonRegistry, Defaults, DBInstanceType ]
        pDBAllocatedStorage: !FindInMap [ ChemAxonRegistry, Defaults, DBAllocatedStorage ]
        pDBSubnetA: !GetAtt rPreclinicalVpc.Outputs.PrivateSubnet1BID
        pDBSubnetB: !GetAtt rPreclinicalVpc.Outputs.PrivateSubnet2BID
        pDBMultiAZ: !Ref pDBMultiAZ
        pDmzSubnetA: !GetAtt rPreclinicalVpc.Outputs.PublicSubnet1ID
        pDmzSubnetB: !GetAtt rPreclinicalVpc.Outputs.PublicSubnet2ID
        pEC2KeyPair: !Ref pEC2KeyPair
        pLoadBalancerType: !Ref pLoadBalancerType
        pSecurityGroupForWebAccess: !GetAtt rOpenVpn.Outputs.rOpenVPNASAllowWebPortsSGParam
        pVpcId: !GetAtt rPreclinicalVpc.Outputs.VPCID
        pDnsHostedZoneID: !GetAtt rVpcNetworking.Outputs.InternalHostedZoneIDParam
        pDnsHostedZoneApexDomain: !GetAtt rVpcNetworking.Outputs.InternalHostedZoneApexDomainName

Outputs:
  TemplateVersion:
    Value: 1.0
  BenchlingURL:
    Description: URL to access Benchling
    Value: !If [ cLaunchBenchlingPlatform, !GetAtt rBenchling.Outputs.BenchlingURL, Benchling not launched ]
  ChemAxonRegistryDNS:
    Description: DNS of Load Balancer to access ChemAxon Compound Registry
    Value: !If [ cLaunchChemAxonRegistry, !GetAtt rChemAxonCompoundRegistry.Outputs.oLoadBalancerDNS, ChemAxon Compound Registry not launched ]
  
